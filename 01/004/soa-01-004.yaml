AWSTemplateFormatVersion: 2010-09-09

Parameters:
  TemplateBucketName:
    Type: String
    Default: awstut-bucket
    
  Prefix:
    Type: String
    Default: soa-01-004
    
  AutoScalingDesiredCapacity:
    Type: Number
    Default: 1
    
  AutoScalingMaxSize:
    Type: Number
    Default: 1
    
  AutoScalingMinSize:
    Type: Number
    Default: 1
    
  EventBusName:
    Type: String
    Default: default
    
  #HTTPPort:
  #  Type: Number
  #  Default: 80
  
  HTTPSPort:
    Type: Number
    Default: 443
    
  InstanceImageId:
    Type: String
    Default: /aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-arm64-gp2
    #Default: /aws/service/ami-amazon-linux-latest/al2023-ami-kernel-default-arm64
    
  InstanceType:
    Type: String
    #Default: t4g.nano
    Default: t4g.micro
    
  LambdaArchitecture:
    Type: String
    Default: arm64
    
  LambdaHandler:
    Type: String
    Default: index.lambda_handler
  
  LambdaRuntime:
    Type: String
    Default: python3.12
    
  #WaitForSuccessTimeoutSeconds:
  #  Type: Number
  #  Default: 600
    

Resources:
  S3Stack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "https://${TemplateBucketName}.s3.${AWS::Region}.amazonaws.com/${Prefix}/${Prefix}-s3.yaml"
      Parameters:
        #Handler: !Ref LambdaHandler
        Prefix: !Ref Prefix
        #Runtime: !Ref LambdaRuntime
        
  VPCStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "https://${TemplateBucketName}.s3.${AWS::Region}.amazonaws.com/${Prefix}/${Prefix}-vpc.yaml"
      Parameters:
        AvailabilityZone1: a
        AvailabilityZone2: d
        CidrIp1: 10.0.1.0/24
        CidrIp2: 10.0.2.0/24
        #CidrIp3: 10.0.3.0/24
        #CidrIp4: 10.0.4.0/24
        #HTTPPort: !Ref HTTPPort
        HTTPSPort: !Ref HTTPSPort
        Prefix: !Ref Prefix
        VPCCidrBlock: 10.0.0.0/16
        
  EndpointStack:
    Type: AWS::CloudFormation::Stack
    DependsOn:
      - VPCStack
    Properties:
      TemplateURL: !Sub "https://${TemplateBucketName}.s3.${AWS::Region}.amazonaws.com/${Prefix}/${Prefix}-endpoint.yaml"
      Parameters:
        EndpointSecurityGroup: !GetAtt VPCStack.Outputs.EndpointSecurityGroup
        Prefix: !Ref Prefix
        PrivateRouteTable: !GetAtt VPCStack.Outputs.PrivateRouteTable
        PrivateSubnet1: !GetAtt VPCStack.Outputs.PrivateSubnet1
        PrivateSubnet2: !GetAtt VPCStack.Outputs.PrivateSubnet2
        VPC: !GetAtt VPCStack.Outputs.VPC
        
  AutoScalingStack:
    Type: AWS::CloudFormation::Stack
    DependsOn:
      - VPCStack
    Properties:
      TemplateURL: !Sub "https://${TemplateBucketName}.s3.${AWS::Region}.amazonaws.com/${Prefix}/${Prefix}-autoscaling.yaml"
      Parameters:
        #AlarmEvaluationPeriod: 2
        #AlarmPeriod: 60
        #AlarmThreshold: 30
        #ALBTargetGroup: !GetAtt ALBStack.Outputs.ALBTargetGroup
        Bucket: !GetAtt S3Stack.Outputs.Bucket
        #Cooldown: 300
        DesiredCapacity: !Ref AutoScalingDesiredCapacity
        ImageId: !Ref InstanceImageId
        InstanceSecurityGroup: !GetAtt VPCStack.Outputs.InstanceSecurityGroup
        InstanceType: !Ref InstanceType
        MaxSize: !Ref AutoScalingMaxSize
        MinSize: !Ref AutoScalingMinSize
        Prefix: !Ref Prefix
        PrivateSubnet1: !GetAtt VPCStack.Outputs.PrivateSubnet1
        PrivateSubnet2: !GetAtt VPCStack.Outputs.PrivateSubnet2
        #ScalingAdjustment1: 1
        #ScalingAdjustment2: -1
        #TargetTrackingConfigurationTargetValue: 50.0
        
  #LambdaStack:
  #  Type: AWS::CloudFormation::Stack
  #  Properties:
  #    TemplateURL: !Sub "https://${TemplateBucketName}.s3.${AWS::Region}.amazonaws.com/${Prefix}/${Prefix}-lambda.yaml"
  #    Parameters:
  #      Architecture: !Ref LambdaArchitecture
  #      #BucketArn: !GetAtt S3Stack.Outputs.BucketArn
  #      #BucketName: !GetAtt S3Stack.Outputs.BucketName
  #      #EventBusName: !Ref EventBusName
  #      Handler: !Ref LambdaHandler
  #      Prefix: !Ref Prefix
  #      Runtime: !Ref LambdaRuntime
        
  SSMStack:
    Type: AWS::CloudFormation::Stack
    DependsOn:
      - S3Stack
    #  - EndpointStack
    #  - EC2Stack
    #  #- SSMIAMStack
    Properties:
      TemplateURL: !Sub "https://${TemplateBucketName}.s3.${AWS::Region}.amazonaws.com/${Prefix}/${Prefix}-ssm.yaml"
      Parameters:
        Bucket: !GetAtt S3Stack.Outputs.Bucket
        #BucketName: !GetAtt S3Stack.Outputs.BucketName
        #CreateImageRoleArn: !GetAtt SSMIAMStack.Outputs.CreateImageRoleArn
        #Instance: !GetAtt EC2Stack.Outputs.Instance
        #Instance1: !GetAtt EC2Stack.Outputs.Instance1
        #Instance2: !GetAtt EC2Stack.Outputs.Instance2
        Prefix: !Ref Prefix
        #TagKey: !Ref TagKey
        #TagValue: !Ref TagValue
        #WaitForSuccessTimeoutSeconds: !Ref WaitForSuccessTimeoutSeconds
        
  EventBridgeStack:
    Type: AWS::CloudFormation::Stack
    DependsOn:
      - AutoScalingStack
      #- LambdaStack
      - SSMStack
    Properties:
      TemplateURL: !Sub "https://${TemplateBucketName}.s3.${AWS::Region}.amazonaws.com/${Prefix}/${Prefix}-eventbridge.yaml"
      Parameters:
        AutoScalingGroup: !GetAtt AutoScalingStack.Outputs.AutoScalingGroup
        Document: !GetAtt SSMStack.Outputs.Document
        #DocumentArn: !GetAtt SSMStack.Outputs.DocumentArn
        DocumentRoleArn: !GetAtt SSMStack.Outputs.DocumentRoleArn
        EventBusName: !Ref EventBusName
        #Function: !GetAtt LambdaStack.Outputs.Function
        #FunctionArn2: !GetAtt LambdaStack.Outputs.FunctionArn2
        Prefix: !Ref Prefix