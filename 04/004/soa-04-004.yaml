AWSTemplateFormatVersion: 2010-09-09

Parameters:
  TemplateBucketName:
    Type: String
    Default: [bucket-name]
    
  Prefix:
    Type: String
    Default: soa-04-004

  ImageId:
    Type: String
    Default: /aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-arm64-gp2
    
  InstanceType:
    Type: String
    Default: t4g.nano


Resources:
  VPCStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "https://${TemplateBucketName}.s3.${AWS::Region}.amazonaws.com/${Prefix}/${Prefix}-vpc.yaml"
      Parameters:
        AvailabilityZone1: a
        AvailabilityZone2: c
        CidrIp1: 10.0.1.0/24
        CidrIp2: 10.0.2.0/24
        CidrIp3: 10.0.3.0/24
        CidrIp4: 10.0.4.0/24
        Prefix: !Ref Prefix
        VPCCidrBlock: 10.0.0.0/16
        
  S3Stack:
    Type: AWS::CloudFormation::Stack
    DependsOn:
      - VPCStack
    Properties:
      TemplateURL: !Sub "https://${TemplateBucketName}.s3.${AWS::Region}.amazonaws.com/${Prefix}/${Prefix}-s3.yaml"
      Parameters:
        EIPPublicIp1: !GetAtt VPCStack.Outputs.EIPPublicIp1
        EIPPublicIp2: !GetAtt VPCStack.Outputs.EIPPublicIp2
        Prefix: !Ref Prefix
        
  EC2Stack:
    Type: AWS::CloudFormation::Stack
    DependsOn:
      - S3Stack
    Properties:
      TemplateURL: !Sub "https://${TemplateBucketName}.s3.${AWS::Region}.amazonaws.com/${Prefix}/${Prefix}-ec2.yaml"
      Parameters:
        Bucket1: !GetAtt S3Stack.Outputs.Bucket1
        Bucket2: !GetAtt S3Stack.Outputs.Bucket2
        Bucket3: !GetAtt S3Stack.Outputs.Bucket3
        Bucket4: !GetAtt S3Stack.Outputs.Bucket4
        ImageId: !Ref ImageId
        InstanceSecurityGroup: !GetAtt VPCStack.Outputs.InstanceSecurityGroup
        InstanceSubnet1: !GetAtt VPCStack.Outputs.InstanceSubnet1
        InstanceSubnet2: !GetAtt VPCStack.Outputs.InstanceSubnet2
        InstanceType: !Ref InstanceType
        Prefix: !Ref Prefix
