AWSTemplateFormatVersion: 2010-09-09

Parameters:
  TemplateBucketName:
    Type: String
    Default: awstut-bucket
    
  Prefix:
    Type: String
    Default: soa-04-002
    
  DomainName1:
    Type: String
    Default: [domain1]
    
  DomainName2:
    Type: String
    Default: [domain2]
    
  # domain1
  HostedZoneId1:
    Type: String
    Default: [hosted-zone-id1]
    
  # domain2
  HostedZoneId2:
    Type: String
    Default: [hosted-zone-id2]
    
  # domain1
  Port1:
    Type: Number
    Default: 81
    
  # domain2
  Port2:
    Type: Number
    Default: 82
    
  ALBHostedZoneId:
    Type: String
    Default: Z14GRHDCWA56QT
    
  HTTPSPort:
    Type: Number
    Default: 443
  

Resources:
  VPCStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "https://${TemplateBucketName}.s3.${AWS::Region}.amazonaws.com/${Prefix}/${Prefix}-vpc.yaml"
      Parameters:
        AvailabilityZone1: a
        AvailabilityZone2: d
        CidrIp1: 10.0.1.0/24
        CidrIp2: 10.0.2.0/24
        CidrIp3: 10.0.3.0/24
        CidrIp4: 10.0.4.0/24
        HTTPSPort: !Ref HTTPSPort
        Port1: !Ref Port1
        Port2: !Ref Port2
        Prefix: !Ref Prefix
        VPCCidrBlock: 10.0.0.0/16
        
  EndpointStack:
    Type: AWS::CloudFormation::Stack
    DependsOn:
      - VPCStack
    Properties:
      TemplateURL: !Sub "https://${TemplateBucketName}.s3.${AWS::Region}.amazonaws.com/${Prefix}/${Prefix}-endpoint.yaml"
      Parameters:
        EndpointSecurityGroup: !GetAtt VPCStack.Outputs.EndpointSecurityGroup
        Prefix: !Ref Prefix
        PrivateRouteTable: !GetAtt VPCStack.Outputs.PrivateRouteTable
        PrivateSubnet1: !GetAtt VPCStack.Outputs.PrivateSubnet1
        PrivateSubnet2: !GetAtt VPCStack.Outputs.PrivateSubnet2
        VPC: !GetAtt VPCStack.Outputs.VPC
        
  EC2Stack:
    Type: AWS::CloudFormation::Stack
    DependsOn:
      - EndpointStack
    Properties:
      TemplateURL: !Sub "https://${TemplateBucketName}.s3.${AWS::Region}.amazonaws.com/${Prefix}/${Prefix}-ec2.yaml"
      Parameters:
        ImageId: /aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2
        InstanceSecurityGroup: !GetAtt VPCStack.Outputs.InstanceSecurityGroup
        InstanceType: t3a.small
        PlaybookBucket: !Ref TemplateBucketName
        Prefix: !Ref Prefix
        PrivateSubnet1: !GetAtt VPCStack.Outputs.PrivateSubnet1
        PrivateSubnet2: !GetAtt VPCStack.Outputs.PrivateSubnet2
        
  SSMStack:
    Type: AWS::CloudFormation::Stack
    DependsOn:
      - EC2Stack
    Properties:
      TemplateURL: !Sub "https://${TemplateBucketName}.s3.${AWS::Region}.amazonaws.com/${Prefix}/${Prefix}-ssm.yaml"
      Parameters:
        Instance1: !GetAtt EC2Stack.Outputs.Instance1
        Instance2: !GetAtt EC2Stack.Outputs.Instance2
        PlaybookBucket: !Ref TemplateBucketName
        PlaybookFileName: playbook.yml
        PlaybookPackageName: playbook.zip
        Prefix: !Ref Prefix
        WaitForSuccessTimeoutSeconds: 300
        
  ACMStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "https://${TemplateBucketName}.s3.${AWS::Region}.amazonaws.com/${Prefix}/${Prefix}-acm.yaml"
      Parameters:
        DomainName1: !Ref DomainName1
        DomainName2: !Ref DomainName2
        HostedZoneId1: !Ref HostedZoneId1
        HostedZoneId2: !Ref HostedZoneId2
        Prefix: !Ref Prefix
        
  ALBStack:
    Type: AWS::CloudFormation::Stack
    DependsOn:
      - EC2Stack
      - ACMStack
    Properties:
      TemplateURL: !Sub "https://${TemplateBucketName}.s3.${AWS::Region}.amazonaws.com/${Prefix}/${Prefix}-alb.yaml"
      Parameters:
        ALBSecurityGroup: !GetAtt VPCStack.Outputs.ALBSecurityGroup
        Certificate1: !GetAtt ACMStack.Outputs.Certificate1
        Certificate2: !GetAtt ACMStack.Outputs.Certificate2
        DomainName1: !Ref DomainName1
        DomainName2: !Ref DomainName2
        HTTPSPort: !Ref HTTPSPort
        Instance1: !GetAtt EC2Stack.Outputs.Instance1
        Instance2: !GetAtt EC2Stack.Outputs.Instance2
        Port1: !Ref Port1
        Port2: !Ref Port2
        Prefix: !Ref Prefix
        PublicSubnet1: !GetAtt VPCStack.Outputs.PublicSubnet1
        PublicSubnet2: !GetAtt VPCStack.Outputs.PublicSubnet2
        VPC: !GetAtt VPCStack.Outputs.VPC
        
        HealthyThresholdCount: 5
        UnhealthyThresholdCount: 2
        HealthCheckTimeoutSeconds: 5
        HealthCheckIntervalSeconds: 30
        HttpCode: 200
        
  Route53Stack:
    Type: AWS::CloudFormation::Stack
    DependsOn:
      - ALBStack
    Properties:
      TemplateURL: !Sub "https://${TemplateBucketName}.s3.${AWS::Region}.amazonaws.com/${Prefix}/${Prefix}-route53.yaml"
      Parameters:
        ALBDnsName: !GetAtt ALBStack.Outputs.ALBDnsName
        ALBHostedZoneId: !Ref ALBHostedZoneId
        DomainName1: !Ref DomainName1
        DomainName2: !Ref DomainName2
        HTTPSPort: !Ref HTTPSPort
        HostedZoneId1: !Ref HostedZoneId1
        HostedZoneId2: !Ref HostedZoneId2
        Prefix: !Ref Prefix
