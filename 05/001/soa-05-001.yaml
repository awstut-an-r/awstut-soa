AWSTemplateFormatVersion: 2010-09-09

Parameters:
  TemplateBucketName:
    Type: String
    Default: awstut-bucket
    
  Prefix:
    Type: String
    Default: soa-05-001
    
  AvailabilityZone1:
    Type: String
    Default: a
    
  AvailabilityZone2:
    Type: String
    Default: d

Resources:
  VPCStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "https://${TemplateBucketName}.s3.${AWS::Region}.amazonaws.com/${Prefix}/${Prefix}-vpc.yaml"
      Parameters:
        AvailabilityZone1: !Ref AvailabilityZone1
        AvailabilityZone2: !Ref AvailabilityZone2
        CidrIp1: 10.0.1.0/24
        CidrIp2: 10.0.2.0/24
        HTTPSPort: 443
        MySQLPort: 3306
        Prefix: !Ref Prefix
        VPCCidrBlock: 10.0.0.0/16
        
  EndpointStack:
    Type: AWS::CloudFormation::Stack
    DependsOn:
      - VPCStack
    Properties:
      TemplateURL: !Sub "https://${TemplateBucketName}.s3.${AWS::Region}.amazonaws.com/${Prefix}/${Prefix}-endpoint.yaml"
      Parameters:
        EndpointSecurityGroup: !GetAtt VPCStack.Outputs.EndpointSecurityGroup
        Prefix: !Ref Prefix
        PrivateRouteTable: !GetAtt VPCStack.Outputs.PrivateRouteTable
        PrivateSubnet1: !GetAtt VPCStack.Outputs.PrivateSubnet1
        VPC: !GetAtt VPCStack.Outputs.VPC

  EC2Stack:
    Type: AWS::CloudFormation::Stack
    DependsOn:
      - VPCStack
      - EndpointStack
    Properties:
      TemplateURL: !Sub "https://${TemplateBucketName}.s3.${AWS::Region}.amazonaws.com/${Prefix}/${Prefix}-ec2.yaml"
      Parameters:
        ImageId: /aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-arm64-gp2
        InstanceSecurityGroup: !GetAtt VPCStack.Outputs.InstanceSecurityGroup
        InstanceType: t4g.nano
        Prefix: !Ref Prefix
        PrivateSubnet1: !GetAtt VPCStack.Outputs.PrivateSubnet1
        
  RDSStack:
    Type: AWS::CloudFormation::Stack
    DependsOn:
      - VPCStack
    Properties:
      TemplateURL: !Sub "https://${TemplateBucketName}.s3.${AWS::Region}.amazonaws.com/${Prefix}/${Prefix}-rds.yaml"
      Parameters:
        AvailabilityZone: !Ref AvailabilityZone2
        DBAllocatedStorage: 20
        DBEngine: mysql
        DBEngineVersion: 8.0.27
        DBInstanceClass: db.t4g.micro
        DBName: testdb
        DBMasterUsername: testuser
        DBMasterUserPassword: Passw0rd
        Prefix: !Ref Prefix
        PrivateSubnet1: !GetAtt VPCStack.Outputs.PrivateSubnet1
        PrivateSubnet2: !GetAtt VPCStack.Outputs.PrivateSubnet2
        RDSDenySecurityGroup: !GetAtt VPCStack.Outputs.RDSDenySecurityGroup
        RDSAllowSecurityGroup: !GetAtt VPCStack.Outputs.RDSAllowSecurityGroup

  FlowlogStack:
    Type: AWS::CloudFormation::Stack
    DependsOn:
      - RDSStack
    Properties:
      TemplateURL: !Sub "https://${TemplateBucketName}.s3.${AWS::Region}.amazonaws.com/${Prefix}/${Prefix}-flowlog.yaml"
      Parameters:
        Prefix: !Ref Prefix
        VPC: !GetAtt VPCStack.Outputs.VPC
