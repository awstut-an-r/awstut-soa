AWSTemplateFormatVersion: 2010-09-09

Parameters:
  FileSystemId:
    Type: String
    
  ImageId:
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    
  InstanceSecurityGroup:
    Type: String
    
  InstanceType:
    Type: String
    
  LogBucketName:
    Type: String
    
  Prefix:
    Type: String
    
  PrivateSubnet1:
    Type: String
    
  PrivateSubnet2:
    Type: String
    
  WaitForSuccessTimeoutSeconds:
    Type: Number
    

Resources:
  Instance1:
    Type: AWS::EC2::Instance
    Properties:
      IamInstanceProfile: !Ref InstanceProfile
      ImageId: !Ref ImageId
      InstanceType: !Ref InstanceType
      #KeyName: !Ref KeyName
      NetworkInterfaces:
        - DeviceIndex: 0
          SubnetId: !Ref PrivateSubnet1
          GroupSet:
            - !Ref InstanceSecurityGroup

  Instance2:
    Type: AWS::EC2::Instance
    Properties:
      IamInstanceProfile: !Ref InstanceProfile
      ImageId: !Ref ImageId
      InstanceType: !Ref InstanceType
      #KeyName: !Ref KeyName
      NetworkInterfaces:
        - DeviceIndex: 0
          SubnetId: !Ref PrivateSubnet2
          GroupSet:
            - !Ref InstanceSecurityGroup
            
  InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles:
        - !Ref InstanceRole

  InstanceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action: sts:AssumeRole
            Principal:
              Service:
                - ec2.amazonaws.com
                #- ssm.amazonaws.com
      Policies:
        - PolicyName: SSMStateManagerPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                  - s3:PutObjectAcl
                  - s3:ListBucket
                Resource:
                  #- !Sub
                  #  - ${S3Bucket}
                  #  - S3Bucket:
                  #      Fn::ImportValue: !Sub ${Prefix}-S3BucketArn
                  #- !Sub
                  #  - ${S3Bucket}/*
                  #  - S3Bucket:
                  #      Fn::ImportValue: !Sub ${Prefix}-S3BucketArn
                  #- !Sub "arn:aws:s3:::${LogBucketName}/${Prefix}"
                  #- !Sub "arn:aws:s3:::${LogBucketName}/${Prefix}/*"
                  - !Sub "arn:aws:s3:::${LogBucketName}"
                  - !Sub "arn:aws:s3:::${LogBucketName}/*"
      ManagedPolicyArns:
        #- arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore
        - arn:aws:iam::aws:policy/AmazonElasticFileSystemsUtils
        
        
  ConfigureAWSPackageAssociation:
    Type: AWS::SSM::Association
    Properties:
      AssociationName: !Sub "${Prefix}-configure-awspackage-association"
      Name: AWS-ConfigureAWSPackage
      OutputLocation:
        S3Location:
          OutputS3BucketName: !Ref LogBucketName
          OutputS3KeyPrefix: !Sub "${Prefix}/configure-awspackage-association-log"
      Parameters:
        action:
          - Install
        installationType:
          - In-place update
        name:
          - AmazonEFSUtils
      ScheduleExpression: rate(30 days)
      Targets:
        - Key: InstanceIds
          Values:
            - !Ref Instance1
            - !Ref Instance2
      WaitForSuccessTimeoutSeconds: !Ref WaitForSuccessTimeoutSeconds
  
  RunShellScriptAssociation:
    Type: AWS::SSM::Association
    DependsOn:
      - ConfigureAWSPackageAssociation
    Properties:
      AssociationName: !Sub "${Prefix}-shellscript-association"
      Name: AWS-RunShellScript
      OutputLocation:
        S3Location:
          OutputS3BucketName: !Ref LogBucketName
          OutputS3KeyPrefix: !Sub "${Prefix}/shellscript-association-log"
      Parameters:
        commands:
          #- "sudo yum update -y"
          #- "sudo yum install -y amazon-efs-utils"
          - sudo mkdir /mnt/efs
          - sleep 90
          - !Sub "sudo mount -t efs ${FileSystemId}:/ /mnt/efs"
      Targets:
        - Key: InstanceIds
          Values:
            - !Ref Instance1
            - !Ref Instance2
      WaitForSuccessTimeoutSeconds: !Ref WaitForSuccessTimeoutSeconds
            
        
#Outputs:
#  Instance1:
#    Value: !Ref Instance1
#    
#  Instance2:
#    Value: !Ref Instance2j